package com.CS304Project.Project.Controller;

import com.CS304Project.Project.Service.EmailService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.event.ApplicationReadyEvent;
import org.springframework.context.event.EventListener;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.LinkedHashMap;
import java.util.Map;

@RestController
@CrossOrigin
@RequestMapping
public class EmailController {
    @Autowired
    private EmailService emailService;
    @PostMapping("/acceptMailSend/{userId}")
    public ResponseEntity<?> triggerAcceptMail(@PathVariable int userId){
        Map<String, Object> map = new LinkedHashMap<String, Object>();
        boolean sent = emailService.sendEmail(userId, "Your Reservation is Successful" +
                "Do not reply this mail.This mail generated by System. ","About Your Reservation");

        if(sent){
            map.put("status", 1);
            map.put("data", sent);
            return new ResponseEntity<>(map, HttpStatus.OK);

        }else{
            map.clear();
            map.put("status", 0);
            map.put("message", "Mail not send");
            return new ResponseEntity<>(map, HttpStatus.OK);
        }
    }

    @PostMapping("/adminMailSend/{resourceId}")
    public ResponseEntity<?> triggerAdminMail(@PathVariable int resourceId){
        Map<String, Object> map = new LinkedHashMap<String, Object>();
        boolean adminSent = emailService.sendAdminMail(resourceId, "Resource Booked","For Reservation");

        if(adminSent){
            map.put("status", 1);
            map.put("data", adminSent);
            return new ResponseEntity<>(map, HttpStatus.OK);

        }else{
            map.clear();
            map.put("status", 0);
            map.put("message", "Mail not send");
            return new ResponseEntity<>(map, HttpStatus.OK);
        }
    }

    @PostMapping("/cancelMailSend/{userId}")
    public ResponseEntity<?> triggerCancelMail(@PathVariable int userId){
        Map<String, Object> map = new LinkedHashMap<String, Object>();
        boolean canceled = emailService.sendEmail(userId, "Your Reservation is Canceled." +
                "Do not reply this mail.This mail generated by System. ","About Your Reservation");

        if(canceled){
            map.put("status", 1);
            map.put("data", canceled);
            return new ResponseEntity<>(map, HttpStatus.OK);

        }else{
            map.clear();
            map.put("status", 0);
            map.put("message", "Mail not send");
            return new ResponseEntity<>(map, HttpStatus.OK);
        }
    }
}
